{
	"info": {
		"_postman_id": "fa999350-5c9b-4bd5-a421-d96ebad16967",
		"name": "Spellslingerer API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Ping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ping",
					"host": [
						"{{url}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Account - Invalid Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is badrequest', function () {\r",
							"    pm.response.to.be.badRequest;\r",
							"});\r",
							"\r",
							"pm.test('message is invalid json', function () {\r",
							"    pm.response.to.have.jsonBody('msg', 'invalid json')\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"test\",\r\n    \"email\": \"test\",\r\n    \"password\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/signup",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Account - Should Succeed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"test\",\r\n    \"email\": \"test@test.test\",\r\n    \"password\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/signup",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Account - Account Already Exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is badrequest', function () {\r",
							"    pm.response.to.be.badRequest;\r",
							"});\r",
							"\r",
							"pm.test('message is duplicate user', function () {\r",
							"    pm.response.to.have.jsonBody('msg', 'user already exists')\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"test\",\r\n    \"email\": \"test@test.test\",\r\n    \"password\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/signup",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - User Does Not Exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is unauthorized', function () {\r",
							"    pm.response.to.be.unauthorized;\r",
							"});\r",
							"\r",
							"pm.test('message is invalid credentials', function () {\r",
							"    pm.response.to.have.jsonBody('msg', 'invalid user credentials')\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"doesnotexist@test.test\",\r\n    \"password\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - Password Incorrect",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is unauthorized', function () {\r",
							"    pm.response.to.be.unauthorized;\r",
							"});\r",
							"\r",
							"pm.test('message is invalid credentials', function () {\r",
							"    pm.response.to.have.jsonBody('msg', 'invalid user credentials')\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"test@test.test\",\r\n    \"password\": \"not the right password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - Should Succeed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('token', pm.response.json()[\"Token\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"test@test.test\",\r\n    \"password\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Load Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/v1/profile",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Profile - Invalid Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is badrequest', function () {\r",
							"    pm.response.to.be.badRequest;\r",
							"});\r",
							"\r",
							"pm.test('message is invalid json', function () {\r",
							"    pm.response.to.have.jsonBody('msg', 'invalid json')\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"new test\",\r\n    \"email\": \"new test\",\r\n    \"password\": \"new test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/profile",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Profile - Should Succeed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('token', pm.response.json()[\"Token\"])\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"new test\",\r\n    \"email\": \"newtest@test.test\",\r\n    \"password\": \"new test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/profile",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Load Data - Still Works After Edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/v1/profile",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout - Should Succeed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/logout",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - Old Credentials Are Invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is unauthorized', function () {\r",
							"    pm.response.to.be.unauthorized;\r",
							"});\r",
							"\r",
							"pm.test('message is invalid credentials', function () {\r",
							"    pm.response.to.have.jsonBody('msg', 'invalid user credentials')\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"test@test.test\",\r\n    \"password\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - Should Succeed, New Credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('token', pm.response.json()[\"Token\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"newtest@test.test\",\r\n    \"password\": \"new test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Current User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/v1/profile",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Current User - Does Not Delete Twice",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is unauthorized', function () {\r",
							"    pm.response.to.be.unauthorized;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/v1/profile",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - Deleted User Does Not Exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is unauthorized', function () {\r",
							"    pm.response.to.be.unauthorized;\r",
							"});\r",
							"\r",
							"pm.test('message is invalid credentials', function () {\r",
							"    pm.response.to.have.jsonBody('msg', 'invalid user credentials')\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"test@test.test\",\r\n    \"password\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Artists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test('response has expected content', function () {\r",
							"    pm.expect(pm.response.json().length).to.equal(41)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/artists",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"artists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Subtypes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test('response has expected content', function () {\r",
							"    pm.expect(pm.response.json().length).to.equal(36)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/subtypes",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"subtypes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test('response has expected content', function () {\r",
							"    pm.expect(pm.response.json().length).to.equal(17)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/sets",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"sets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Types",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test('response has expected content', function () {\r",
							"    pm.expect(pm.response.json().length).to.equal(5)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/types",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"types"
					]
				}
			},
			"response": []
		},
		{
			"name": "Colours",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test('response has expected content', function () {\r",
							"    pm.expect(pm.response.json().length).to.equal(6)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/colours",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"colours"
					]
				}
			},
			"response": []
		},
		{
			"name": "Materials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test('response has expected content', function () {\r",
							"    pm.expect(pm.response.json().length).to.equal(19)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/materials",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"materials"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rarities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response is ok', function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test('response has expected content', function () {\r",
							"    pm.expect(pm.response.json().length).to.equal(6)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/rarities",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"rarities"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "test"
		},
		{
			"key": "url",
			"value": "http://localhost:8080"
		}
	]
}